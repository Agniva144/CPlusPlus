#include<iostream>
#include<stack>
using namespace std;

bool redundant(string str){
	int cnt;
	stack<char> s;

	// cout<<str.length()<<endl;
	
	for(int i=0;i<str.length();i++){
		// cout<<str[i]<<" "<<i<<endl;
		if(str[i]==')'){
			cnt=0;
			while(s.top()!='('){
				// cout<<"poping element "<<s.top()<<endl;
				s.pop();
				cnt++;
				// cout<<"count "<<cnt<<endl;
			}
			s.pop();	//poping the top as opening bracket so as to check the next subsequent elements.
			if(!cnt){
				cout<<"reduntant"<<endl;
				return true;
			}

		}
		else{
			// cout<<"pushing element->"<<str[i]<<endl;
			s.push(str[i]);
		}
		// cout<<endl;
	}
	cout<<"not reduntant"<<endl;
	return false;
}

int main(){
	string str;
	cin>>str;
	// cout<<str.length()<<endl;
	cout<<redundant(str);

}