#include<iostream>
using namespace std;

class Node{
    public:
        int data;
        Node* next;
    Node(int data){
        this->data=data;
        this->next=NULL;
    }
};

void swap(Node* a,Node* b){
    int temp=a->data;
    a->data=b->data;
    b->data=temp;
}

void bubble_sort(Node*head,int cnt){
    Node* temp=head;
    for(int i=0;i<cnt-1;i++){
        temp=head;  //updating the head at the begining of the iteration cause this is where it iterates again .
        for(int j=0;j<cnt-i-1;j++){
            if(temp->next->data<temp->data){
                swap(temp,temp->next);  //pushing the largest element in the last of iteration.
            }
            temp=temp->next;    //updating the next for that particular iteration.
        }
    }
}

Node* takeinput(){
    int data;
    cin>>data;

    Node* head=NULL;
    Node* tail=NULL;
    while(data!=-1){
        Node* newNode=new Node(data);
        if(head==NULL){
            head=newNode;
            tail=newNode;
        }
        else{
            tail->next=newNode;
            tail=tail->next;
        }
        cin>>data;
    }
    return head;
}

void print(Node* head){
    if(head==NULL){
        return;
    }
    Node* temp=head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    cout<<endl;
}

int count(Node* head){
    if(head==NULL){
        return 0;
    }
    int cnt=0;
    Node* temp=head;
    while(temp!=NULL){
        temp=temp->next;
        cnt++;
    }
    return cnt;
}

int main(){

    Node* h1=takeinput();
    // print(h1);
    // int cnt=count(h1);
    // cout<<cnt<<endl;
    // h1=append_last_n_node(h1,3,cnt);
    // print(h1);
    int cnt=count(h1);
    bubble_sort(h1,cnt);
    print(h1);

}