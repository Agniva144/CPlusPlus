#include<iostream>
using namespace std;
#include "node.cpp"

Node* takeinput(){
    int data;
    cin>>data;

    Node *head=NULL;
    Node *tail=NULL;
    while(data!=-1){
        Node *newNode=new Node(data);
        if(head==NULL){  //first element insertion
            head=newNode;
            tail=newNode;
        }else{
            tail->next=newNode;
            tail=tail->next;
        }
        cin>>data;
    }
    return head;
}

Node* insertNode(Node* head,int i,int data){
    Node* newNode=new Node(data);
    int cnt=0;
    Node* temp=head;

    if(i==0){   //inserting on the starting node
        newNode->next=head;
        head=newNode;
        return head;    //this the time why we have to redefine the return type to Node* as when we insert element on the starting node the head pointer needs to be updated.
    }

//Iterating upto the last element
    while(temp!=NULL/*reaching the null terminates solves tail end insertion problem */
     && 
     cnt<i-1){
        temp=temp->next;
        cnt++;
    }

    //connecting the node with the list.
    if(temp!=NULL){
        Node* a=temp->next;
        newNode->next=a;
        temp->next=newNode;
    }

    return head;
}//corner cases: 1-- inserting on the first node   2.-- inserting on tail end next element.     3.--Insert at last node.

void print(Node *head){
    Node *temp=head;    //never loose the value of head pointer.
    
    while(temp!=NULL){
         cout<<temp->data<<" ";
         temp=temp->next;
     }
}

int main(){
    //statical class
    //Node n1(1);
    //Node *head=&n1;//storing the address of n1(head)

    //Node n2(2);

    /*
    n1.next=&n2;//connecting nodes

    cout<<n1.data<<" "<<n2.data<<endl; 

    cout<<head->data;//getting the value of n1 using pointer also using arrow(->) to dereference a pointer variable.


    //Dynamically
    Node *n3=new Node(10);
    Node *head=n3;//storing the head; 
    Node *n4=new Node(20);
    n3->next=n4;//connecting nodes
    */

   //Node n3(3);
   //Node n4(4);
   //Node n5(5);


   //connecting nodes
   //n1.next=&n2;
   //n2.next=&n3;
   //n3.next=&n4;
   //n4.next=&n5;

   //print(head);
   //print(head);//will get printed out twice as the head pointer's value got passed and it remains unchanged in main fuction .
    
    Node *head=takeinput();
    print(head);
    int i,data;
    cin>>i>>data;
    head=insertNode(head,i,data);
    print(head);
}